var moment = require('moment')
var net = require('net')
var logger = require('../log')


function Client(options) {
  this.options   =  options || {}
  this.ip = this.options.ip
  this.port = this.options.port
  this.timeout = Number(this.options.timeout)
}

var logInfo = function(tramaReq,tramaRes) {

  logger.info(moment(new Date()).format('DD/MM/YYYY/HH:mm:ss.SSS') +' (REQUEST) ' +tramaReq);
  logger.info(moment(new Date()).format('DD/MM/YYYY/HH:mm:ss.SSS') +' (RESPONSE)' +tramaRes);
}

Client.prototype.request = function(trama, callback) {
 
  var client = net.connect({host:this.ip,port:this.port}, () => {
  var tramaSend = trama + '\r\n'

    client.write(tramaSend);
  })

  var buffer = new Buffer('','utf-8');

  client.on('data', function(data) {

    buffer = Buffer.concat([buffer, new Buffer(data, 'utf-8')]);
    client.end();
  })

  client.on('end', function(data) {
    logInfo (trama,buffer.toString())
    callback(null,buffer.toString())
  })

  client.on('error', function(err) {
    callback(err,null)
  });
  
  client.setTimeout(this.timeout, function(msg) {
    
    client.end();
    callback('El Servirdor No responde!',null)
  })

}


module.exports = Client
